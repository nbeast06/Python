"""
Created on Wed April 26,2017

@author: Nemesio Mangila
"""

import pandas as pd
import matplotlib.pyplot as plt
import numpy as np
from scipy import optimize
from tkinter import filedialog
import os

fileloc = open(str(filedialog.askopenfilename())) #opens the location of csv
op_colmn = 'Overpush (mW)' #column name of overpush
zpw_colmn = 'Normalized Mean (dTDP)' #delta touchdown
fileout = 'C:\\Users\\Documents\\Box Sync\\pyton code_ZPW\\test\\'
fileout_1 = 'C:\\Users\\Documents\\Box Sync\\pyton code_ZPW\\'
if not os.path.exists(fileout):
    os.makedirs(fileout)
data = pd.read_csv(fileloc, delimiter =',') #extractor
data_colmn = 'Cell Design' #column name of Group/ABS design/Cell Design
selection = pd.unique(data[data_colmn])
for i in selection:
    data_name = i
    
    #Create dataframe per group
    grp_index = data[data_colmn] == data_name
    grp_index.value_counts()
    grp_data=data[grp_index]

    #compute mean
    zpw_y = grp_data.groupby([op_colmn])[zpw_colmn].mean().tolist() #average dtdp per OP
    zpw_x = grp_data.groupby([op_colmn])[op_colmn].mean().tolist() #just to generate x axis

    zpw_x = np.asarray(zpw_x)
    zpw_y = np.asarray(zpw_y)

    zpw_x = zpw_x.astype(float) #declare array as float type
    zpw_y = zpw_y.astype(float)

    fig, zp = plt.subplots()

    def piecewise_linear(x,x0,y0,k1,k2):
        return np.piecewise(x,[x<x0], [lambda x:k1*x + y0-k1*x0, lambda x:k2*x + y0-k2*x0])
    
    p,e = optimize.curve_fit(piecewise_linear,zpw_x,zpw_y)
    xd = np.linspace(zpw_x[0],zpw_x[-1],1000)
    zp.set_ylim([-0.5,5.2])
    zp.set_autoscaley_on(False)
    zp.plot(zpw_x,zpw_y,'o')
    zp.plot(xd,piecewise_linear(xd,*p))
    plt.title(i+ ', ' +'ZPW = ' + str(round(p[0],2)))
    plt.savefig(fileout+ i + '.png')
    plt.show()

    
